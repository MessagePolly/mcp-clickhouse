# ---------------------------------------------------------------------------

#
# This file configures the New Relic Python Agent.
#
# The path to the configuration file should be supplied to the function
# newrelic.agent.initialize() as its first parameter, or the Python agent
# will look for a file called newrelic.ini in the current working directory.
#
# The configuration file follows a structure similar to what you would
# find for Microsoft Windows INI files. For further information on the
# configuration file format see the Python ConfigParser documentation at:
#
#    http://docs.python.org/library/configparser.html
#
# For further discussion on the behaviour of the Python agent that can
# be configured via this configuration file see:
#
#    http://newrelic.com/docs/python/python-agent-configuration
#

# ---------------------------------------------------------------------------

# Here are the settings that are common to all environments.

[newrelic]

# You must specify the license key associated with your New Relic account.
# This key binds the Python Agent's data to your account in the New Relic
# service. If this value is unset, no data will be sent to New Relic.
license_key = %(NEW_RELIC_LICENSE_KEY)s

# The application name. Set this to be the name of your application as
# you would like it to show up in New Relic in the browser. The name and
# language are used to aggregate your data to show various performance data.
app_name = %(NEW_RELIC_APP_NAME)s

# When "true", the agent collects performance data about your application
# and reports this data to the New Relic service. This global switch is
# normally overridden for each environment below.
monitor_mode = true

# Sets the name of a file to log agent messages to. Useful for debugging
# any issues with the agent. This is not set by default as it is not known
# in advance what user your web application processes will run as and where
# they have permission to write to. Whatever you set this to you must ensure
# that the permissions for the containing directory and the file itself are
# correct, and that the user that your web application runs as can write to
# the file. If not able to out a log file, it is also possible to say
# "stderr" and output to standard error output. This would normally result in
# output appearing in your web server log.
log_file = %(NEW_RELIC_LOG_FILE)s

# Sets the level of detail of messages sent to the log file, if a log file
# location has been provided. Possible values, in increasing order of detail,
# are: "critical", "error", "warning", "info" and "debug". When reporting any
# agent issues to New Relic technical support, the most useful setting for
# the support engineers is "debug". However, this can generate a lot of
# information so it is best not to keep the agent at this level for longer
# than it takes to reproduce the problem you are experiencing.
log_level = %(NEW_RELIC_LOG_LEVEL)s

# When "true", the agent will log all data sent to the New Relic service to
# the log file. This is useful when debugging issues with the agent. By
# default the agent will log only the responses from the New Relic service
# but not the actual data being sent. Note that when true, a large amount of
# data will be logged.
audit_log_file = false

# High Security Mode enforces certain security settings, and prevents them
# from being overridden, so that no sensitive data is sent to New Relic.
# Enabling High Security Mode means that request parameters are not
# collected and SQL can not be sent to New Relic in its raw form. To
# activate High Security Mode, it must be set to 'true' in this local .ini
# configuration file AND be set to 'true' in the server-side configuration
# in the New Relic user interface. For details, see
# https://docs.newrelic.com/docs/agents/manage-apm-agents/configuration/high-security-mode
high_security = %(NEW_RELIC_HIGH_SECURITY)s

# The Python Agent will attempt to connect directly to the New Relic
# service. If there is an intermediate firewall between your host and the
# New Relic service that requires you to use a HTTP proxy, then you should
# set both the "proxy_host" and "proxy_port" settings to the required
# values for the HTTP proxy. The "proxy_user" and "proxy_pass" settings
# should additionally be set if proxy authentication is implemented by the
# HTTP proxy. The "proxy_scheme" setting dictates what protocol scheme is
# used in talking to the HTTP proxy. This would normally always be "http"
# but if you are using a HTTPS proxy, then it would be set to "https".
proxy_scheme = http
proxy_host = 
proxy_port = 
proxy_user = 
proxy_pass = 

# Tells the transaction tracer and error collector (when enabled) whether
# or not to capture the query string for the URL and any form data as name
# value pairs passed to the agent. When true, this is captured for both
# GET and POST requests. When false, this is not captured for either GET
# or POST requests, or the bodies of any requests.
capture_params = false

# Transaction tracer captures deep information about slow transactions and
# sends this to the New Relic service once per minute. Included in the
# transaction trace is the exact call sequence of the transactions along
# with any SQL statements performed.
transaction_tracer.enabled = true

# Threshold in seconds for when to collect a transaction trace. When the
# response time of a controller action exceeds this threshold, a transaction
# trace will be recorded and sent to the New Relic service.
transaction_tracer.transaction_threshold = apdex_f

# When the transaction tracer is on, SQL statements can optionally be
# recorded. The recorder has three modes, "off" which sends no SQL, "raw"
# which sends the SQL statement in its original form, and "obfuscated"
# which strips out numeric and string literals.
transaction_tracer.record_sql = obfuscated

# Threshold in seconds for when to collect stack trace for a SQL call.
# In other words, when SQL statements exceed this threshold, then capture
# and send the current stack trace. This is helpful for pinpointing where
# long SQL calls originate from.
transaction_tracer.stack_trace_threshold = 0.500

# Determines whether the agent will capture query plans for slow SQL queries.
# Only supported in MySQL and PostgreSQL. Setting this to false when using
# other database backends will prevent the agent from creating an
# explain plan. Set this to false to turn off explanation of SQL statements.
transaction_tracer.explain_enabled = true

# Sets the threshold for SQL query plan explanations. These are captured
# for SQL statements when their duration exceeds this threshold.
transaction_tracer.explain_threshold = 0.500

# Error collector captures information about uncaught exceptions and sends
# them to the New Relic service for viewing.
error_collector.enabled = true

# To stop the agent from reporting to New Relic certain types of exceptions,
# set this property to a comma separated list of full exception type names.
error_collector.ignore_errors = 

# Browser monitoring is the Real User Monitoring feature of the UI.
# For those Python web frameworks that are supported, this feature can be
# auto-enabled, but this preference can be used to disable the feature.
browser_monitoring.auto_instrument = true

# Distributed tracing lets you see the path that a request takes through your
# distributed system. Enabling distributed tracing changes the behavior of some
# New Relic features, so carefully consult the transition guide before you
# enable this feature: https://docs.newrelic.com/docs/transition-guide-distributed-tracing
distributed_tracing.enabled = true

# ---------------------------------------------------------------------------

#
# The application environments. These are specific settings which override
# the common environment settings. The environment defined in the
# environment variable NEW_RELIC_ENVIRONMENT is used.

# Application development configuration.
[newrelic:development]

# Disable the agent for development.
monitor_mode = false

# Application staging configuration.
[newrelic:staging]

monitor_mode = true
app_name = %(NEW_RELIC_APP_NAME)s (Staging)

# Application production configuration.
[newrelic:production]

monitor_mode = true
app_name = %(NEW_RELIC_APP_NAME)s (Production)
